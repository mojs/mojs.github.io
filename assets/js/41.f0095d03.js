(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{348:function(e,t,a){"use strict";a.r(t);var s=a(13),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"property-map-syntax"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#property-map-syntax"}},[e._v("#")]),e._v(" Property Map Syntax")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://codepen.io/sol0mka/pen/WxpGNm?editors=0010",target:"_blank",rel:"noopener noreferrer"}},[e._v("CodePen Example"),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("code",[e._v("Property Map")]),e._v(" array was designed to express sequential values. Often used with "),t("code",[e._v("Burst")]),e._v(" and "),t("code",[e._v("Stagger")]),e._v(" modules to generate values that repeat over children length. Basically it is just an array that maps its values to children based on child index with "),t("code",[e._v("mod")]),e._v(" function. So if you have "),t("code",[e._v("property map")]),e._v(" with "),t("code",[e._v("3 values")]),e._v(" and "),t("code",[e._v("5 children")]),e._v(", then "),t("code",[e._v("4")]),e._v("th and "),t("code",[e._v("5")]),e._v("th items will recieve "),t("code",[e._v("0")]),e._v("th and "),t("code",[e._v("1")]),e._v("st values from the map respecively. Works with any values inside the array.")]),e._v(" "),t("p",[e._v("You can provide a "),t("code",[e._v("null")]),e._v(" value if you wanna use the default value.")]),e._v(" "),t("p",[e._v("Full API reference:")]),e._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[e._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ...")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("property")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'rand(0, 20)'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ...")]),e._v("\n\n")])])]),t("ul",[t("li",[t("a",{attrs:{href:"https://codepen.io/sol0mka/pen/WxpGNm?editors=0010",target:"_blank",rel:"noopener noreferrer"}},[e._v("CodePen Example"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=r.exports}}]);